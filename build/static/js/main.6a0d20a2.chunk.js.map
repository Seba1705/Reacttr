{"version":3,"sources":["components/Header.js","components/Message.js","components/MessageList.js","components/InputText.js","components/ProfileBar.js","components/Main.js","components/Profile.js","components/Login.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","Message","state","pressFavorite","pressRetweet","onPressFavorite","_this","props","onFavorite","setState","onPressRetweet","onRetweet","dateFormat","moment","this","date","fromNow","userLink","concat","username","react_router_dom","to","src","picture","alt","displayName","text","onClick","onReplyTweet","numRetweets","numFavorites","Component","MessageList","_ref","messages","map","msg","Message_Message","key","id","retweets","favorites","reverse","InputText","onSendText","userNameToReply","onCloseText","method","onSubmit","name","rows","type","ProfileBar","onOpenText","onLogout","Main","user","Object","assign","openText","handleOpenText","e","preventDefault","handleCloseText","handleSendText","newMessage","uuid","v4","email","split","photoURL","Date","now","target","value","firebase","database","ref","child","push","set","handleRetweet","msgId","filter","ret","length","handleFavorite","fav","renderOpenText","handleReplyTweet","_this2","on","snapshot","val","Profile","emailAddress","location","Login","onAuth","style","margin","App","auth","onAuthStateChanged","provider","GithubAuthProvider","signInWithPopup","then","result","console","log","catch","error","code","message","signOut","_this3","react_router","path","exact","render","Main_Main","handleLogout","handleOnAuth","pathname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","App_App","document","querySelector"],"mappings":"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","file":"static/js/main.6a0d20a2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header className='header'>\r\n            <h1 className='logo'>Reacttr</h1>\r\n        </header>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst proptypes = {\r\n    username: PropTypes.string.isRequired,\r\n    picture: PropTypes.string.isRequired,\r\n    displayName: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    date: PropTypes.number.isRequired,\r\n    numRetweets: PropTypes.number.isRequired,\r\n    numFavorites: PropTypes.number.isRequired,\r\n    onReplyTweet: PropTypes.func.isRequired,\r\n    onFavorite: PropTypes.func.isRequired,\r\n    onRetweet: PropTypes.func.isRequired\r\n}\r\n\r\nexport default class Message extends Component {\r\n    state = {\r\n        pressFavorite: false,\r\n        pressRetweet: false\r\n    }\r\n \r\n    onPressFavorite = () => {\r\n        this.props.onFavorite();\r\n        this.setState({\r\n            pressFavorite : true\r\n        })\r\n    }\r\n\r\n    onPressRetweet = () => {\r\n        this.props.onRetweet();\r\n        this.setState({\r\n            pressRetweet : true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let dateFormat = moment(this.props.date).fromNow(),\r\n            userLink = `/user/${this.props.username}`;\r\n\r\n        return (\r\n            <div className='message mt-3'>\r\n                <div className='user'>\r\n                    <Link to={userLink}>\r\n                        <figure>\r\n                            <img className='avatar' src={this.props.picture} alt=''/>\r\n                        </figure>\r\n                    </Link>\r\n                    <span className='displayName'>{this.props.displayName}</span>\r\n                    <span className='username'>{this.props.username}</span>\r\n                    <span className='date'>{dateFormat}</span>\r\n                </div>\r\n                \r\n                <h3>{this.props.text}</h3>\r\n                \r\n                <div className='buttons'>\r\n                    \r\n                    <div \r\n                        className='icon'\r\n                        onClick={this.props.onReplyTweet}\r\n                    >\r\n                        <span className='fa fa-reply'></span>\r\n                    </div>\r\n                    \r\n                    <div \r\n                        className={ this.state.pressRetweet ? 'rtGreen' : '' }\r\n                        onClick={this.onPressRetweet}\r\n                    >\r\n                        <span className='fa fa-retweet'></span>\r\n                        <span className='numero'>{this.props.numRetweets}</span>\r\n                    </div>\r\n                    \r\n                    <div \r\n                        className={ this.state.pressFavorite ? 'favYellow' : '' }\r\n                        onClick={this.onPressFavorite}\r\n                    >\r\n                        <span className='fa fa-star'></span>\r\n                        <span className='numero'>{this.props.numFavorites}</span>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nMessage.propTypes = proptypes;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Message from './Message';\r\n\r\nconst propTypes = {\r\n    messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onRetweet: PropTypes.func.isRequired,\r\n    onFavorite: PropTypes.func.isRequired,\r\n    onReplyTweet: PropTypes.func.isRequired\r\n}\r\n \r\nexport default function MessageList( {messages, onRetweet, onFavorite, onReplyTweet } ) {\r\n    return (\r\n        <div className='list'>\r\n            { messages.map( msg => {\r\n                return (\r\n                    <Message\r\n                        key={msg.id}\r\n                        text={msg.text}\r\n                        picture={msg.picture}\r\n                        displayName={msg.displayName}\r\n                        username={msg.username}\r\n                        date={msg.date}\r\n                        numRetweets={msg.retweets}\r\n                        numFavorites={msg.favorites}\r\n                        onRetweet={() => onRetweet(msg.id)}\r\n                        onFavorite={() => onFavorite(msg.id)}\r\n                        onReplyTweet={() => onReplyTweet(msg.id, msg.username)}\r\n                    />\r\n                )\r\n            }).reverse()}\r\n        </div>\r\n    )\r\n}\r\n\r\nMessageList.propTypes = propTypes;\r\n \r\n\r\n \r\n ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst proptypes = {\r\n    userNameToReply : PropTypes.string.isRequired,\r\n    onSendText : PropTypes.func.isRequired,\r\n    onCloseText : PropTypes.func.isRequired\r\n}\r\n\r\nexport default function InputText( {onSendText, userNameToReply, onCloseText} ) {\r\n    return (\r\n        <form className='form' method='post' onSubmit={onSendText}>\r\n            <div className=\"form-group\">\r\n                <textarea className='form-control text-it' name='text' rows='5'>\r\n                    { (userNameToReply) ? `@${userNameToReply} ` : '' }\r\n                </textarea>\r\n            </div>\r\n            <div className='buttons-it'>\r\n                <button className='close' onClick={onCloseText}>Cerrar</button>\r\n                <button className='send' type='submit'>Enviar</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nInputText.propTypes = proptypes;\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst propTypes = {\r\n    picture: PropTypes.string.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    onOpenText: PropTypes.func.isRequired\r\n}\r\n\r\nexport default function ProfileBar ({ picture, username, onOpenText, onLogout }) {\r\n    return (\r\n        <div className='profileBar d-flex justify-content-between'>\r\n            <div className='d-flex align-items-center'>\r\n                <Link to='/profile'>\r\n                    <figure>\r\n                        <img className='avatar mr-2' src={picture} alt=''/>\r\n                    </figure>\r\n                </Link>\r\n                <span className='username-pb'> Hola @{username}!</span>\r\n            </div>\r\n            <div className='buttons-it'>\r\n                <button onClick={onOpenText} className='button mr-3'>\r\n                    <span className='fa fa-lg fa-edit'></span> Tweet!\r\n                </button>\r\n                <button onClick={onLogout} className='button'>\r\n                    <span className='fa fa-sign-out'></span>Salir\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileBar.propTypes = propTypes;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'uuid';\r\nimport firebase from 'firebase';\r\n\r\nimport MessageList from './MessageList';\r\nimport InputText from './InputText';\r\nimport ProfileBar from './ProfileBar';\r\n\r\nconst proptypes = {\r\n    user : PropTypes.object.isRequired,\r\n    onLogout : PropTypes.func.isRequired\r\n}   \r\n\r\nexport default class Main extends Component {\r\n    \r\n    \r\n    state = {\r\n        user: Object.assign({}, this.props.user, { retweets: [] }, { favorites: [] }),\r\n        openText: false,\r\n        userNameToReply: '',\r\n        messages: []\r\n    }\r\n    \r\n    componentWillMount() {\r\n        const messagesRef = firebase.database().ref().child('messages')\r\n\r\n        messagesRef.on('child_added', snapshot => {\r\n            this.setState({\r\n                messages: this.state.messages.concat(snapshot.val()),\r\n                openText: false\r\n            })\r\n        })\r\n    }\r\n\r\n    handleOpenText = e => {\r\n        e.preventDefault();\r\n        this.setState({ openText : true });\r\n    }\r\n\r\n    handleCloseText = e => {\r\n        e.preventDefault();\r\n        this.setState({ openText : false });\r\n    }\r\n\r\n    handleSendText = e => {\r\n        e.preventDefault()\r\n        var newMessage = {\r\n            id: uuid.v4(),\r\n            username: this.state.user.email.split('@')[0],\r\n            displayName: this.state.user.displayName,\r\n            picture: this.state.user.photoURL,\r\n            date: Date.now(),\r\n            text: e.target.text.value,\r\n            favorites: 0,\r\n            retweets: 0\r\n        }\r\n\r\n        const messageRef = firebase.database().ref().child('messages'),\r\n              messageID = messageRef.push();\r\n        messageID.set(newMessage);\r\n    }\r\n\r\n    handleRetweet = msgId => {\r\n        let alreadyRetweeted = this.state.user.retweets.filter(ret => ret === msgId);\r\n        \r\n        if (alreadyRetweeted.length === 0){\r\n            let messages = this.state.messages.map( msg => {\r\n                msg.id === msgId && msg.retweets++;\r\n                return msg;\r\n            })\r\n\r\n            let user = Object.assign({}, this.state.user);\r\n            user.retweets.push(msgId);\r\n\r\n            this.setState({\r\n                messages,\r\n                user\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFavorite = msgId => {\r\n        let alreadyFavorite = this.state.user.favorites.filter(fav => fav === msgId);\r\n        \r\n        if (alreadyFavorite.length === 0){\r\n            \r\n            let messages = this.state.messages.map( msg => {\r\n                msg.id === msgId && msg.favorites++;\r\n                return msg;\r\n            })\r\n\r\n            let user = Object.assign({}, this.state.user);\r\n            user.favorites.push(msgId);\r\n\r\n            this.setState({\r\n                messages,\r\n                user\r\n            })\r\n        }\r\n    }\r\n\r\n    renderOpenText = () => {\r\n        if (this.state.openText){\r\n            return (\r\n                <InputText \r\n                    onSendText={this.handleSendText}\r\n                    onCloseText={this.handleCloseText}\r\n                    userNameToReply={this.state.userNameToReply}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    handleReplyTweet = (msgId, userNameToReply) => {\r\n        this.setState({\r\n            openText : true,\r\n            userNameToReply\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileBar \r\n                    picture={this.props.user.photoURL}\r\n                    username={this.props.user.email.split('@')[0]}\r\n                    onOpenText={this.handleOpenText}\r\n                    onLogout={this.props.onLogout}\r\n                />\r\n                {this.renderOpenText()}\r\n                <MessageList \r\n                    messages={this.state.messages}\r\n                    onRetweet={this.handleRetweet}\r\n                    onFavorite={this.handleFavorite}\r\n                    onReplyTweet={this.handleReplyTweet}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nMain.propTypes = proptypes;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    picture: PropTypes.string.isRequired,\r\n    displayName: PropTypes.string.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    emailAddress: PropTypes.string.isRequired\r\n    // location: PropTypes.string.isRequired\r\n}\r\n\r\nexport default function Profile ({ picture, displayName, username, emailAddress, location }){\r\n    return (\r\n        <div className='profile'>\r\n            <img className='avatar-profile' src={picture} alt=''/>\r\n            <span className='name'>{displayName}</span>\r\n            <ul className='data'>\r\n                <li>\r\n                    <span className='fa fa-user mr-2'></span>{username}\r\n                </li>\r\n                <li>\r\n                    <span className='fa fa-envelope mr-2'></span>{emailAddress}\r\n                </li>\r\n                <li>\r\n                    <span className='fa fa-map-marker mr-2'></span>{location}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n \r\nProfile.propTypes = propTypes;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    onAuth : PropTypes.func.isRequired\r\n}\r\n\r\nexport default function Login({ onAuth }) {\r\n    return (\r\n        <div className='login'>\r\n            <p className='text-login'>\r\n                    Necesitamos que inicies sesion con tu cuenta de GitHub\r\n                    para que puedas leer y escribir mensajes\r\n                </p>\r\n                <button\r\n                    onClick={onAuth}\r\n                    className='button-login'\r\n                >\r\n                    <span className='fa fa-github' style={{margin:5}}></span> Login con Github\r\n                </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nLogin.propTypes = propTypes;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nimport Header from './components/Header';\r\nimport Main from './components/Main';\r\nimport Profile from './components/Profile';\r\nimport Login from './components/Login';\r\n\r\nexport default class App extends Component {\r\n    \r\n    state = {\r\n        user: null\r\n    }\r\n\r\n    componentWillMount () {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n          if (user) {\r\n                this.setState({ user })\r\n                // console.log(user)\r\n          } else {\r\n                this.setState({ user: null })\r\n          }\r\n        })\r\n      }\r\n\r\n    handleOnAuth () {\r\n        const provider = new firebase.auth.GithubAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then(result => console.log(`${result.user.email} ha iniciado sesión`))\r\n            .catch(error => console.error(`Error: ${error.code}: ${error.message}`))\r\n    }\r\n\r\n    handleLogout() {\r\n        firebase.auth().signOut()\r\n            .then(() => console.log('Te has desconenctado correctamente'))\r\n            .catch(() => console.error('Ha ocurrido un error'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className='container-fluid mt-3'>\r\n                    <Header />\r\n\r\n                    <Switch>\r\n                        <Route path='/' exact render={() => {\r\n                            if (this.state.user) {\r\n                                return (\r\n                                    <Main\r\n                                        user={this.state.user}\r\n                                        onLogout={this.handleLogout}\r\n                                    />\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <Login onAuth={this.handleOnAuth} />\r\n                                )\r\n                            }\r\n                        }}/>\r\n                        \r\n                        <Route path='/profile' render={ () => ( \r\n                            <Profile \r\n                                picture={this.state.user.photoURL}\r\n                                username={this.state.user.email.split('@')[0]}\r\n                                displayName={this.state.user.displayName}\r\n                                location={this.state.user.location}\r\n                                emailAddress={this.state.user.email}\r\n                            /> \r\n                        )}/>\r\n                        \r\n                        <Route path='/user/:username' render={({ location }) => (\r\n                            <Profile \r\n                                username={location.pathname.split('/')[2]}\r\n                            /> \r\n                        )}/>\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport firebase from 'firebase';\r\nimport './index.css';\r\nimport 'normalize-css';\r\nimport App from './App';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyATM2zGkouyFvapAPsXKONrnbKrrZFExUE\",\r\n    authDomain: \"sebastian-reacttr.firebaseapp.com\",\r\n    databaseURL: \"https://sebastian-reacttr.firebaseio.com\",\r\n    projectId: \"sebastian-reacttr\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"1054263410598\",\r\n    appId: \"1:1054263410598:web:e7b5c39d7a04771b\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}